apiVersion: v1
kind: Template
metadata:
  name: harbor-chartmuseum-template
  annotations:
    description: "A template for generating Harbor's chartmuseum service"
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOON_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: DEPLOYMENT_STRATEGY
    description: Strategy of Deploymentconfig
    value: "Rolling"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: "harbor-chartmuseum"
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  data:
    PORT: "9999"
    CACHE: "redis"
    CACHE_REDIS_ADDR: "harbor-redis:6379"
    CACHE_REDIS_DB: "3"
    BASIC_AUTH_USER: "chart_controller"
    DEPTH: "1"
    DEBUG: "false"
    LOG_JSON: "true"
    DISABLE_METRICS: "false"
    DISABLE_API: "false"
    DISABLE_STATEFILES: "false"
    ALLOW_OVERWRITE: "true"
    AUTH_ANONYMOUS_GET: "false"
    TLS_CERT: ""
    TLS_KEY: ""
    CONTEXT_PATH: ""
    INDEX_LIMIT: "0"
    MAX_STORAGE_OBJECTS: "0"
    MAX_UPLOAD_SIZE: "20971520"
    CHART_POST_FORM_FIELD_NAME: "chart"
    PROV_POST_FORM_FIELD_NAME: "prov"
    STORAGE: "amazon"
    #STORAGE_AMAZON_BUCKET: "" # Will be injected at build time via variable from GraphiQL
    #STORAGE_AMAZON_REGION: "" # Will be injected at build time via variable from GraphiQL
    #AWS_ACCESS_KEY_ID: "" # Will be injected at build time via variable from GraphiQL
    #AWS_SECRET_ACCESS_KEY: "" # Will be injected at build time via variable from GraphiQL
    CACHE_REDIS_PASSWORD: ""
- apiVersion: v1
  kind: Service
  metadata:
    name: "harbor-chartmuseum"
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    ports:
      - port: 80
        targetPort: 9999
    selector:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: "harbor-chartmuseum"
    labels:
      service: ${SERVICE_NAME}
      branch: ${SAFE_BRANCH}
      project: ${SAFE_PROJECT}
  spec:
    replicas: 1
    selector:
      matchLabels:
        service: ${SERVICE_NAME}
        branch: ${SAFE_BRANCH}
        project: ${SAFE_PROJECT}
    template:
      metadata:
        labels:
          service: ${SERVICE_NAME}
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
      spec:
        hostname: ${SERVICE_NAME} # harbor-chartmuseum
        containers:
        - name: chartmuseum
          image: ${SERVICE_IMAGE} # cdchris12/chartmuseum-photon:dev1.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 9999
            initialDelaySeconds: 1
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 9999
            initialDelaySeconds: 1
            periodSeconds: 10
          envFrom:
          - configMapRef:
              name: "harbor-chartmuseum"
          - configMapRef:
              name: "lagoon-env"
          env:
            - name: BASIC_AUTH_PASS
              valueFrom:
                secretKeyRef:
                  name: harbor-core-secret
                  key: HARBOR_CORE_SECRET
          ports:
          - containerPort: 9999
          volumeMounts:
          - name: chartmuseum-data
            mountPath: /chart_storage
            subPath: 
        volumes:
        - name: chartmuseum-data
          emptyDir: {}
